# IMPORTANT: Specify your New Relic API key here.
# licenseKey:
#
# or Specify secret which contains New Relic API key
# customSecretName: secret_name
# customSecretLicenseKey: secret_key
#
# IMPORTANT: The Kubernetes cluster name
# https://docs.newrelic.com/docs/kubernetes-monitoring-integration
# cluster: ""
#
# The previous values can also be declared as global in order to be
# shared by other newrelic charts
#
# global:
#   licenseKey:
#   customSecretName: secret_name
#   customSecretLicenseKey: secret_key
#   cluster: ""

prometheusScrape: "true"

nameOverride: ""

fullnameOverride: ""

image:
  repository: newrelic/nri-prometheus
  tag: 1.0.0

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the name template
  name: ""

# If you wish to provide your own config.yaml file include it under config:
# the sample config file is included here as an example.
config:
  # How often the integration should run. Defaults to 30s.
  # scrape_duration: "30s"
  # The HTTP client timeout when fetching data from endpoints. Defaults to 30s.
  # scrape_timeout: "30s"
  # Wether the integration should run in verbose mode or not. Defaults to false.
  # verbose: true
  # Wether the integration should skip TLS verification or not. Defaults to false.
  # insecure_skip_verify: false
  # The label used to identify scrapable targets. Defaults to "prometheus.io/scrape".
  # scrape_enabled_label: "prometheus.io/scrape"
  # Wether k8s nodes needs to be labelled to be scraped or not. Defaults to false.
  require_scrape_enabled_label_for_nodes: true
  transformations:
    - description: "General processing rules"
      rename_attributes:
        - metric_prefix: ""
          attributes:
            container_name: "containerName"
            pod_name: "podName"
            namespace: "namespaceName"
            node: "nodeName"
            container: "containerName"
            pod: "podName"
            deployment: "deploymentName"
      ignore_metrics:
        # Metrics on pods and containers are being ignored as they are already collected by the New Relic Kubernetes Integration.
        - except:
          - kube_hpa_
          - kube_daemonset_
          - kube_statefulset_
          - kube_endpoint_
          - kube_service_
          - kube_limitrange
          - kube_node_
          - kube_poddisruptionbudget_
          - kube_resourcequota
          - nr_stats
      copy_attributes:
        - from_metric: "kube_hpa_labels"
          to_metrics: "kube_hpa_"
          match_by:
            - namespace
            - hpa
        - from_metric: "kube_daemonset_labels"
          to_metrics: "kube_daemonset_"
          match_by:
            - namespace
            - daemonset
        - from_metric: "kube_statefulset_labels"
          to_metrics: "kube_statefulset_"
          match_by:
            - namespace
            - statefulset
        - from_metric: "kube_endpoint_labels"
          to_metrics: "kube_endpoint_"
          match_by:
            - namespace
            - endpoint
        - from_metric: "kube_service_labels"
          to_metrics: "kube_service_"
          match_by:
            - namespace
            - service
        - from_metric: "kube_node_labels"
          to_metrics: "kube_node_"
          match_by:
            - namespace
            - node

nodeSelector: {}

tolerations: []

affinity: {}
